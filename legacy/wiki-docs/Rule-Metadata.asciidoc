:ProductName: Windup
:ProductShortName: Windup

[[Rule-Metadata]]
=== Rule Metadata

.DRAFT

==== Overview

{ProductName} uses rule metadata to store and track information such as the rule ID, origin, and required add-ons. It is also used to apply tags to the rule related for ordering, filtering, debugging and performance reasons.

==== Metadata used by {ProductShortName}

NOTE: The ruleset metadata will be set using annotations in the future.
[source,java,options="nowrap"]
----
@Rules(id="", after=[...], ...)
----


To control *ordering*, override `getExecuteAfter()` and `getExecuteBefore()`.

[source,java,options="nowrap"]
----
public class MyRules extends AbstractRuleProvider
{
    public List<Class<? extends AbstractRuleProvider>> getExecuteAfter() {
        return asClassList(UpdateVictimsDbRules.class, ComputeArchivesSHA512.class);
    }
----

NOTE: The order is set for whole `RuleProvider`. There's no way to set it for individual rules.


To specify the *rule ID*, use `.withId("...")`.

[source,java,options="nowrap"]
----
    .addRule()
    .perform(...)
    .withId("CheckArchivesWithVictims")
----


For *other metadata*, either use `.withMetadata()` or override `enhanceMetadata()`.
To provide categorization for filtering, use `CATEGORY`.

For its metadata, {ProductShortName} uses the keys defined in `RuleMetadata`:

* http://windup.github.io/windup/docs/latest/javadoc/org/jboss/windup/config/metadata/RuleMetadata.html#CATEGORY[CATEGORY] (String): Define which category the rule belongs to, which can be then used to filter the rules to execute (plus all those they depend on). Not implemented yet.

* http://windup.github.io/windup/docs/latest/javadoc/org/jboss/windup/config/metadata/RuleMetadata.html#ORIGIN[ORIGIN] (String): The rule origin. Typically a class name.

* http://windup.github.io/windup/docs/latest/javadoc/org/jboss/windup/config/metadata/RuleMetadata.html#[AUTO_COMMIT] (boolean): Whether to call database `commit()` after the rule executes.

* http://windup.github.io/windup/docs/latest/javadoc/org/jboss/windup/config/metadata/RuleMetadata.html#TREAT_EXCEPTIONS_AS_FATAL[TREAT_EXCEPTIONS_AS_FATAL] (boolean): Whether all Exceptions from this Rule are to be treated as fatal. The default is non-fatal.

* http://windup.github.io/windup/docs/latest/javadoc/org/jboss/windup/config/metadata/RuleMetadata.html#RULE_PROVIDER[RULE_PROVIDER]: The `RuleProvider` that originated the rule. This is used internally, not to be specified by rule author.

You can find out more information about rule metadata here: http://windup.github.io/windup/docs/latest/javadoc/org/jboss/windup/config/metadata/RuleMetadata.html[RuleMetadata] Javadoc. 


==== How to define rule metadata

The `RuleMetadata` is defined using the `.withMetadata(Object key, Object value)`.

[source,javaoptions="nowrap"]
----
.addRule()
.when(...)
.perform(...)
.withId("CheckArchivesWithVictims")
.withMetadata(RuleMetadata.CATEGORY, ...)
----

In case you want to apply the same metadata to all rules in some `RuleProvider`, override it's `enhanceMetadata()` method. The default implementations sets `CATEGORY` to "Uncategorized", `ORIGIN` to its class name, and `RULE_PROVIDER` to the `RuleProvider` object:

[source,java,options="nowrap"]
----
public class MyRules extends AbstractRuleProvider
{
    public void enhanceMetadata(Context context) {
        if( ! context.containsKey(RuleMetadata.CATEGORY) )
            context.put(RuleMetadata.CATEGORY, "Uncategorized");
        if( ! context.containsKey(RuleMetadata.ORIGIN) )
            context.put(RuleMetadata.ORIGIN, this.getClass().getName());
        if( ! context.containsKey(RuleMetadata.RULE_PROVIDER) )
            context.put(RuleMetadata.RULE_PROVIDER, this);
    }
----

===== Why a Map?

For the rules definition, {ProductShortName} uses the OCPsoft Rewrite library. Whenever there is something {ProductShortName} specific which can't be pulled to the upstream implementation, {ProductShortName} resorts to putting data into a metadata map.

This map is typically not used by rule authors, unless they use a custom {ProductShortName} extension (don't confuse that with custom Ruleset).


==== Ruleset metadata

Ruleset metadata cover the whole Ruleset, not individual rules.
For ruleset metadata, unlike rules, {ProductShortName} uses a type-safe interface http://windup.github.io/windup/docs/latest/javadoc/org/jboss/windup/config/metadata/RulesetMetadata.html[RulesetMetadata].

Currently, it only defines Ruleset ID.
